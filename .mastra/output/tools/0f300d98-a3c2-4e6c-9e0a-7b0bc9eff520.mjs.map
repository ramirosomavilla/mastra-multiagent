{"version":3,"file":"0f300d98-a3c2-4e6c-9e0a-7b0bc9eff520.mjs","sources":["../../../src/mastra/tools/weather-tool.ts"],"sourcesContent":["import { createTool } from '@mastra/core/tools';\nimport { z } from 'zod';\n\ninterface GeocodingResponse {\n  results: {\n    latitude: number;\n    longitude: number;\n    name: string;\n  }[];\n}\ninterface WeatherResponse {\n  current: {\n    time: string;\n    temperature_2m: number;\n    apparent_temperature: number;\n    relative_humidity_2m: number;\n    wind_speed_10m: number;\n    wind_gusts_10m: number;\n    weather_code: number;\n  };\n}\n\nexport const weatherTool = createTool({\n  id: 'get-weather',\n  description: 'Get current weather for a location',\n  inputSchema: z.object({\n    location: z.string().describe('City name'),\n  }),\n  outputSchema: z.object({\n    temperature: z.number(),\n    feelsLike: z.number(),\n    humidity: z.number(),\n    windSpeed: z.number(),\n    windGust: z.number(),\n    conditions: z.string(),\n    location: z.string(),\n  }),\n  execute: async ({ context }) => {\n    return await getWeather(context.location);\n  },\n});\n\nconst getWeather = async (location: string) => {\n  const geocodingUrl = `https://geocoding-api.open-meteo.com/v1/search?name=${encodeURIComponent(location)}&count=1`;\n  const geocodingResponse = await fetch(geocodingUrl);\n  const geocodingData = (await geocodingResponse.json()) as GeocodingResponse;\n\n  if (!geocodingData.results?.[0]) {\n    throw new Error(`Location '${location}' not found`);\n  }\n\n  const { latitude, longitude, name } = geocodingData.results[0];\n\n  const weatherUrl = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current=temperature_2m,apparent_temperature,relative_humidity_2m,wind_speed_10m,wind_gusts_10m,weather_code`;\n\n  const response = await fetch(weatherUrl);\n  const data = (await response.json()) as WeatherResponse;\n\n  return {\n    temperature: data.current.temperature_2m,\n    feelsLike: data.current.apparent_temperature,\n    humidity: data.current.relative_humidity_2m,\n    windSpeed: data.current.wind_speed_10m,\n    windGust: data.current.wind_gusts_10m,\n    conditions: getWeatherCondition(data.current.weather_code),\n    location: name,\n  };\n};\n\nfunction getWeatherCondition(code: number): string {\n  const conditions: Record<number, string> = {\n    0: 'Clear sky',\n    1: 'Mainly clear',\n    2: 'Partly cloudy',\n    3: 'Overcast',\n    45: 'Foggy',\n    48: 'Depositing rime fog',\n    51: 'Light drizzle',\n    53: 'Moderate drizzle',\n    55: 'Dense drizzle',\n    56: 'Light freezing drizzle',\n    57: 'Dense freezing drizzle',\n    61: 'Slight rain',\n    63: 'Moderate rain',\n    65: 'Heavy rain',\n    66: 'Light freezing rain',\n    67: 'Heavy freezing rain',\n    71: 'Slight snow fall',\n    73: 'Moderate snow fall',\n    75: 'Heavy snow fall',\n    77: 'Snow grains',\n    80: 'Slight rain showers',\n    81: 'Moderate rain showers',\n    82: 'Violent rain showers',\n    85: 'Slight snow showers',\n    86: 'Heavy snow showers',\n    95: 'Thunderstorm',\n    96: 'Thunderstorm with slight hail',\n    99: 'Thunderstorm with heavy hail',\n  };\n  return conditions[code] || 'Unknown';\n}\n"],"names":[],"mappings":"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"}